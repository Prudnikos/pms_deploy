import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://zbhvwxpvlxqxadqzshfc.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpiaHZ3eHB2bHhxeGFkcXpzaGZjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTkyNTM3NCwiZXhwIjoyMDY3NTAxMzc0fQ.0kO3vG1OXNS05NPgm7MmcbkdMuLSG49GKwkCP4979tc';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkRecentBookings() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –Ω–æ–º–µ—Ä–∞–º...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–º–µ—Ä–∞
    const { data: rooms } = await supabase
      .from('rooms')
      .select('*')
      .in('room_type', ['Standard', 'Deluxe', 'Suite'])
      .order('room_type');
    
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:');
    console.log('====================');
    rooms?.forEach(room => {
      console.log(`${room.room_type}: ${room.room_number} (ID: ${room.id})`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const { data: bookings, error } = await supabase
      .from('bookings')
      .select('id, guest_first_name, room_id, check_in, check_out, source, created_at')
      .order('created_at', { ascending: false })
      .limit(10);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
      return;
    }
    
    console.log('\n\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:');
    console.log('==============================');
    
    if (bookings && bookings.length > 0) {
      bookings.forEach((booking, index) => {
        const room = rooms?.find(r => r.id === booking.room_id);
        const roomInfo = room ? `${room.room_number} (${room.room_type})` : '‚ùå –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –ù–û–ú–ï–†';
        
        console.log(`\n${index + 1}. ${booking.guest_first_name}`);
        console.log(`   –î–∞—Ç—ã: ${booking.check_in} - ${booking.check_out}`);
        console.log(`   –ù–æ–º–µ—Ä: ${roomInfo}`);
        console.log(`   Source: ${booking.source || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`   –°–æ–∑–¥–∞–Ω–æ: ${new Date(booking.created_at).toLocaleString('ru-RU')}`);
        
        if (!room) {
          console.log(`   ‚ö†Ô∏è Room ID: ${booking.room_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ rooms!`);
        }
      });
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –Ω–æ–º–µ—Ä–∞–º
      console.log('\n\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ –Ω–æ–º–µ—Ä–∞–º:');
      console.log('==========================================');
      
      const roomStats = {};
      bookings.forEach(booking => {
        const room = rooms?.find(r => r.id === booking.room_id);
        const roomName = room ? `${room.room_number} (${room.room_type})` : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä';
        roomStats[roomName] = (roomStats[roomName] || 0) + 1;
      });
      
      Object.entries(roomStats).forEach(([roomName, count]) => {
        console.log(`${roomName}: ${count} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π`);
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å Suite
      const suiteBookings = bookings.filter(b => {
        const room = rooms?.find(r => r.id === b.room_id);
        return room?.room_type === 'Suite';
      });
      
      const deluxeBookings = bookings.filter(b => {
        const room = rooms?.find(r => r.id === b.room_id);
        return room?.room_type === 'Deluxe';
      });
      
      console.log('\nüìå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º:');
      console.log(`   Suite –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: ${suiteBookings.length}`);
      console.log(`   Deluxe –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: ${deluxeBookings.length}`);
      
      if (suiteBookings.length === 0) {
        console.log('   ‚ö†Ô∏è –ù–ò –û–î–ù–û –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Suite –Ω–µ –ø–æ–ø–∞–ª–æ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä!');
      }
      
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

checkRecentBookings();