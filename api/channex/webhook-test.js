// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π webhook endpoint –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
// URL: https://pms.voda.center/api/channex/webhook-test

export default async function handler(req, res) {
  // CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Credentials', true);
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');
  res.setHeader('Access-Control-Allow-Headers', 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, Authorization');

  // Handle preflight requests
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  console.log('üîî –¢–ï–°–¢–û–í–´–ô webhook –ø–æ–ª—É—á–µ–Ω:', {
    method: req.method,
    headers: req.headers,
    body: req.body,
    timestamp: new Date().toISOString()
  });

  // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±—ã–µ HTTP –º–µ—Ç–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∞
  try {
    const response = {
      success: true,
      message: 'Test webhook received successfully!',
      method: req.method,
      timestamp: new Date().toISOString(),
      data_received: req.body || {},
      headers_received: req.headers
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç:', response);
    
    res.status(200).json(response);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ webhook:', error);
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
}