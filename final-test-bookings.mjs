import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://zbhvwxpvlxqxadqzshfc.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpiaHZ3eHB2bHhxeGFkcXpzaGZjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTkyNTM3NCwiZXhwIjoyMDY3NTAxMzc0fQ.0kO3vG1OXNS05NPgm7MmcbkdMuLSG49GKwkCP4979tc';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testFinalBookings() {
  console.log('üß™ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô\n');
  console.log('='.repeat(50));
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–º–µ—Ä–∞
    const { data: rooms } = await supabase
      .from('rooms')
      .select('*')
      .in('room_type', ['Standard', 'Deluxe', 'Suite'])
      .order('room_type');
    
    console.log('\n‚úÖ –ù–û–ú–ï–†–ê –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:');
    console.log('-'.repeat(30));
    rooms?.forEach(room => {
      console.log(`‚Ä¢ ${room.room_type}: ${room.room_number}`);
      console.log(`  ID: ${room.id}`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º Airbnb
    const { data: bookings } = await supabase
      .from('bookings')
      .select('*')
      .eq('source', 'Airbnb')
      .order('created_at', { ascending: false })
      .limit(5);
    
    console.log('\n‚úÖ –ü–û–°–õ–ï–î–ù–ò–ï AIRBNB –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('-'.repeat(30));
    
    if (bookings && bookings.length > 0) {
      bookings.forEach((booking, index) => {
        const room = rooms?.find(r => r.id === booking.room_id);
        console.log(`\n${index + 1}. ${booking.guest_first_name} ${booking.guest_last_name || ''}`);
        console.log(`   üìÖ ${booking.check_in} - ${booking.check_out}`);
        console.log(`   üè† –ù–æ–º–µ—Ä: ${room ? `${room.room_number} (${room.room_type})` : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
        console.log(`   üí∞ –°—É–º–º–∞: $${booking.total_amount || 0}`);
        console.log(`   üìå Source: ${booking.source}`);
        console.log(`   üìå Channel: ${booking.channel}`);
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –Ω–æ–º–µ—Ä–∞–º
      console.log('\nüìä –ü–†–û–í–ï–†–ö–ê –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø:');
      console.log('-'.repeat(30));
      
      const standardBookings = bookings.filter(b => {
        const room = rooms?.find(r => r.id === b.room_id);
        return room?.room_type === 'Standard';
      });
      
      const deluxeBookings = bookings.filter(b => {
        const room = rooms?.find(r => r.id === b.room_id);
        return room?.room_type === 'Deluxe';
      });
      
      const suiteBookings = bookings.filter(b => {
        const room = rooms?.find(r => r.id === b.room_id);
        return room?.room_type === 'Suite';
      });
      
      console.log(`Standard Room: ${standardBookings.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π`);
      console.log(`Deluxe Room: ${deluxeBookings.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π`);
      console.log(`Suite: ${suiteBookings.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–Ω—ã
      console.log('\nüí∞ –ü–†–û–í–ï–†–ö–ê –¶–ï–ù:');
      console.log('-'.repeat(30));
      
      const priceIssues = [];
      bookings.forEach(booking => {
        const room = rooms?.find(r => r.id === booking.room_id);
        if (room && booking.total_amount) {
          const expectedPrices = {
            'Standard': 100,
            'Deluxe': 200,
            'Suite': 300
          };
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ü–µ–Ω–∞ –æ–∂–∏–¥–∞–µ–º–æ–π (—Å —É—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–æ—á–µ–π –∏ –∫–æ–º–∏—Å—Å–∏–π)
          const nights = Math.ceil(
            (new Date(booking.check_out) - new Date(booking.check_in)) / (1000 * 60 * 60 * 24)
          );
          const basePrice = expectedPrices[room.room_type] * nights;
          
          console.log(`${room.room_type}: $${booking.total_amount} (–æ–∂–∏–¥–∞–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º $${basePrice})`);
          
          if (booking.total_amount < basePrice) {
            priceIssues.push(`${room.room_type}: —Ü–µ–Ω–∞ $${booking.total_amount} –º–µ–Ω—å—à–µ –±–∞–∑–æ–≤–æ–π $${basePrice}`);
          }
        }
      });
      
      if (priceIssues.length > 0) {
        console.log('\n‚ö†Ô∏è –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –° –¶–ï–ù–ê–ú–ò:');
        priceIssues.forEach(issue => console.log(`  ‚Ä¢ ${issue}`));
      } else {
        console.log('‚úÖ –í—Å–µ —Ü–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!');
      }
      
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç Airbnb –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    console.log('\n' + '='.repeat(50));
    console.log('‚úÖ –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò:');
    console.log('1. ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–æ–º–µ—Ä–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ (Standard, Deluxe, Suite)');
    console.log('2. ‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ "Airbnb" —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö');
    console.log('3. ‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–∞–º');
    console.log('4. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–Ω—ã –≤—Ä—É—á–Ω—É—é –Ω–∞ —Å–∞–π—Ç–µ');
    console.log('5. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Suite –ø—Ä–∏ –∑–∞–Ω—è—Ç–æ–º Deluxe');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

testFinalBookings();