// –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã —á–µ—Ä–µ–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
import { supabase } from './src/lib/supabase.js';

async function updateBookingsSchema() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü—ã bookings...');
  
  try {
    // –¢–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
    const testBooking = {
      id: `schema-test-${Date.now()}`,
      check_in: '2025-08-30',
      check_out: '2025-08-31',
      guest_name: 'Schema Test',
      room: 'Test Room',
      
      // –ù–æ–≤—ã–µ –ø–æ–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å:
      adults: 2,
      children: 0,
      channel: 'test',
      source: 'test',
      ota_reservation_code: 'TEST-123',
      room_type: 'standard_apartment',
      room_number: 'A1',
      room_title: 'Test Room',
      total_amount: 100,
      currency: 'USD',
      guest_first_name: 'Test',
      guest_last_name: 'User',
      guest_email: 'test@test.com',
      guest_phone: '+1234567890',
      notes: 'Test booking for schema validation',
      status: 'confirmed'
    };
    
    console.log('üìù –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...');
    
    const { data, error } = await supabase
      .from('bookings')
      .insert(testBooking)
      .select();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
      
      // –ï—Å–ª–∏ –ø–æ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –ø–æ–∫–∞–∂–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
      if (error.message.includes("could not find") || error.message.includes("column")) {
        console.log('üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É bookings');
        console.log('üìã SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ Supabase Dashboard ‚Üí SQL Editor:');
        console.log('');
        console.log(`-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≥–æ—Å—Ç–µ–π
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS adults INTEGER DEFAULT 2,
ADD COLUMN IF NOT EXISTS children INTEGER DEFAULT 0,
ADD COLUMN IF NOT EXISTS infants INTEGER DEFAULT 0;

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤/OTA  
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS channel VARCHAR(50),
ADD COLUMN IF NOT EXISTS source VARCHAR(50),
ADD COLUMN IF NOT EXISTS ota_reservation_code VARCHAR(255);

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ –∏ —Ç–∏–ø–æ–≤
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS room_type VARCHAR(100),
ADD COLUMN IF NOT EXISTS room_number VARCHAR(20),
ADD COLUMN IF NOT EXISTS room_title VARCHAR(255);

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS total_amount DECIMAL(10,2),
ADD COLUMN IF NOT EXISTS currency VARCHAR(3) DEFAULT 'USD';

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≥–æ—Å—Ç–µ–π
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS guest_first_name VARCHAR(100),
ADD COLUMN IF NOT EXISTS guest_last_name VARCHAR(100),
ADD COLUMN IF NOT EXISTS guest_email VARCHAR(255),
ADD COLUMN IF NOT EXISTS guest_phone VARCHAR(50);

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∑–∞–º–µ—Ç–æ–∫
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS notes TEXT;

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
ALTER TABLE bookings 
ADD COLUMN IF NOT EXISTS airbnb_meta JSONB,
ADD COLUMN IF NOT EXISTS agoda_meta JSONB;`);
        
        return false;
      }
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      console.log('üìä –î–∞–Ω–Ω—ã–µ:', data[0]);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
      await supabase.from('bookings').delete().eq('id', testBooking.id);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
      
      console.log('üéâ –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã –∞–∫—Ç—É–∞–ª—å–Ω–∞!');
      return true;
    }
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    return false;
  }
}

// –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É sync_status –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
async function createSyncStatusTable() {
  console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã sync_status...');
  
  try {
    const { data, error } = await supabase
      .from('sync_status')
      .select('*')
      .limit(1);
    
    if (error && error.message.includes('relation "sync_status" does not exist')) {
      console.log('üìã SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã sync_status:');
      console.log('');
      console.log(`-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
CREATE TABLE IF NOT EXISTS sync_status (
    id SERIAL PRIMARY KEY,
    channel VARCHAR(50) NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'idle',
    last_sync_at TIMESTAMP WITH TIME ZONE,
    total_synced INTEGER DEFAULT 0,
    errors JSONB,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
CREATE UNIQUE INDEX IF NOT EXISTS sync_status_channel_idx ON sync_status(channel);`);
      
      return false;
    } else if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ sync_status:', error.message);
      return false;
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ sync_status —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return true;
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ sync_status:', error.message);
    return false;
  }
}

async function main() {
  console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  console.log('');
  
  const bookingsOk = await updateBookingsSchema();
  const syncStatusOk = await createSyncStatusTable();
  
  console.log('');
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:');
  console.log(`üìã –¢–∞–±–ª–∏—Ü–∞ bookings: ${bookingsOk ? '‚úÖ –ì–æ—Ç–æ–≤–∞' : '‚ùå –¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'}`);
  console.log(`üìã –¢–∞–±–ª–∏—Ü–∞ sync_status: ${syncStatusOk ? '‚úÖ –ì–æ—Ç–æ–≤–∞' : '‚ùå –¢—Ä–µ–±—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è'}`);
  
  if (!bookingsOk || !syncStatusOk) {
    console.log('');
    console.log('üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ SQL –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∏—Ö –≤ Supabase Dashboard ‚Üí SQL Editor');
    console.log('üîó https://supabase.com/dashboard/project/zbhvwxpvlxqxadqzshfc/sql');
  } else {
    console.log('');
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
  }
}

main().catch(console.error);