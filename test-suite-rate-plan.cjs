const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

const API_KEY = 'uUdBtyJdPAYoP0m0qrEStPh2WJcXCBBBLMngnPxygFWpw0GyDE/nmvN/6wN7gXV+';
const BASE_URL = 'https://staging.channex.io/api/v1';
const PROPERTY_ID = '6ae9708a-cbaa-4134-bf04-29314e842709';

async function testSuiteRatePlan() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê SUITE RATE PLAN\n');
  console.log('='.repeat(50));
  
  const suiteRoomTypeId = 'e243d5aa-eff3-43a7-8bf8-87352b62fdc3';
  const suiteRatePlanId = '45195f3e-fb59-4ddf-9e29-b667dbe2ab58';
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º—ã–º –∑–∞–ø—Ä–æ—Å–æ–º Rate Plan
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º Rate Plan –ø–æ ID –Ω–∞–ø—Ä—è–º—É—é:');
    console.log(`Rate Plan ID: ${suiteRatePlanId}`);
    
    const directUrl = `${BASE_URL}/rate_plans/${suiteRatePlanId}`;
    const directResponse = await fetch(directUrl, {
      headers: {
        'user-api-key': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    console.log(`–°—Ç–∞—Ç—É—Å –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: ${directResponse.status}`);
    
    if (directResponse.ok) {
      const directData = await directResponse.json();
      console.log('‚úÖ Rate Plan –Ω–∞–π–¥–µ–Ω!');
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${directData.data?.attributes?.title}`);
      console.log(`   Room Type ID: ${directData.data?.relationships?.room_type?.data?.id}`);
      console.log(`   Property ID: ${directData.data?.relationships?.property?.data?.id}`);
    } else if (directResponse.status === 404) {
      console.log('‚ùå Rate Plan –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ —Å —Ç–∞–∫–∏–º ID');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞');
    }
    
    // 2. –ò—â–µ–º –≤—Å–µ Rate Plans –¥–ª—è Suite Room Type
    console.log('\nüìã –í—Å–µ Rate Plans –¥–ª—è Suite Room Type:');
    const allRatePlansUrl = `${BASE_URL}/rate_plans?property_id=${PROPERTY_ID}`;
    const allResponse = await fetch(allRatePlansUrl, {
      headers: {
        'user-api-key': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    if (allResponse.ok) {
      const allData = await allResponse.json();
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è Suite
      const suiteRatePlans = allData.data?.filter(rp => 
        rp.relationships?.room_type?.data?.id === suiteRoomTypeId
      );
      
      if (suiteRatePlans && suiteRatePlans.length > 0) {
        console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω–æ ${suiteRatePlans.length} Rate Plans –¥–ª—è Suite:`);
        suiteRatePlans.forEach(rp => {
          console.log(`\n   ${rp.attributes.title}:`);
          console.log(`     ID: ${rp.id}`);
          console.log(`     Currency: ${rp.attributes.currency}`);
          console.log(`     Sell Mode: ${rp.attributes.sell_mode}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑—å —Å Airbnb
          if (rp.attributes.title?.includes('AirBNB') || 
              rp.attributes.title?.includes('Airbnb')) {
            console.log('     üìç –°–≤—è–∑–∞–Ω —Å Airbnb!');
          }
        });
        
        console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:');
        console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö Rate Plan ID –¥–ª—è Suite –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.');
        
        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π
        if (suiteRatePlans[0]) {
          console.log(`\n–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π Rate Plan ID: ${suiteRatePlans[0].id}`);
          console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${suiteRatePlans[0].attributes.title}`);
        }
      } else {
        console.log('‚ùå –ù–µ—Ç Rate Plans –¥–ª—è Suite Room Type');
        console.log('   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å Rate Plan –≤ Channex –¥–ª—è Suite');
      }
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º Villa –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    console.log('\nüìã –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è - Villa First Floor:');
    const villaRoomTypeId = 'c14d8272-5406-40d0-b7d9-726513a13b5c';
    
    if (allResponse.ok) {
      const allData = await allResponse.json();
      
      const villaRatePlans = allData.data?.filter(rp => 
        rp.relationships?.room_type?.data?.id === villaRoomTypeId
      );
      
      if (villaRatePlans && villaRatePlans.length > 0) {
        console.log(`‚úÖ –£ Villa –µ—Å—Ç—å ${villaRatePlans.length} Rate Plans:`);
        villaRatePlans.forEach(rp => {
          console.log(`   - ${rp.id}: ${rp.attributes.title}`);
        });
      }
    }
    
    console.log('\n' + '='.repeat(50));
    console.log('\nüìä –ò–¢–û–ì:');
    console.log('========');
    console.log('Suite Room Type —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω—É–∂–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Rate Plan ID.');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã—à–µ –∫–∞–∫–∏–µ Rate Plans –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è Suite.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testSuiteRatePlan();