const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

const API_KEY = 'uUdBtyJdPAYoP0m0qrEStPh2WJcXCBBBLMngnPxygFWpw0GyDE/nmvN/6wN7gXV+';
const BASE_URL = 'https://staging.channex.io/api/v1';
const PROPERTY_ID = '6ae9708a-cbaa-4134-bf04-29314e842709';

async function analyzeSuiteIssue() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –° SUITE\n');
  console.log('='.repeat(50));
  
  const suiteRoomTypeId = 'e243d5aa-eff3-43a7-8bf8-87352b62fdc3';
  const suiteRatePlanId = '45195f3e-fb59-4ddf-9e29-b667dbe2ab58';
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –í–°–ï Rate Plans
    console.log('\nüìã –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –í–°–ï Rate Plans –¥–ª—è property...');
    const allRatePlansUrl = `${BASE_URL}/rate_plans?property_id=${PROPERTY_ID}`;
    const allResponse = await fetch(allRatePlansUrl, {
      headers: {
        'user-api-key': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    const allData = await allResponse.json();
    console.log(`–í—Å–µ–≥–æ Rate Plans: ${allData.data?.length || 0}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—à Suite Rate Plan –≤ —Å–ø–∏—Å–∫–µ
    const foundSuiteRatePlan = allData.data?.find(rp => rp.id === suiteRatePlanId);
    
    if (foundSuiteRatePlan) {
      console.log('\n‚úÖ Suite Rate Plan –ù–ê–ô–î–ï–ù –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ!');
      console.log(`   ID: ${foundSuiteRatePlan.id}`);
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${foundSuiteRatePlan.attributes.title}`);
      console.log(`   Room Type ID: ${foundSuiteRatePlan.relationships?.room_type?.data?.id}`);
    } else {
      console.log('\n‚ùå Suite Rate Plan –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ');
      console.log(`   –ò—Å–∫–∞–ª–∏ ID: ${suiteRatePlanId}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –¥–ª—è Suite
      const suiteRatePlans = allData.data?.filter(rp => 
        rp.relationships?.room_type?.data?.id === suiteRoomTypeId
      );
      
      if (suiteRatePlans && suiteRatePlans.length > 0) {
        console.log(`\n   –ù–æ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ Rate Plans –¥–ª—è Suite (${suiteRatePlans.length}):`);
        suiteRatePlans.forEach(rp => {
          console.log(`     - ${rp.id}: ${rp.attributes.title}`);
        });
      }
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ Rate Plan
    console.log('\nüìã –®–∞–≥ 2: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ Suite Rate Plan...');
    const directUrl = `${BASE_URL}/rate_plans/${suiteRatePlanId}`;
    const directResponse = await fetch(directUrl, {
      headers: {
        'user-api-key': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    if (directResponse.ok) {
      const directData = await directResponse.json();
      console.log('‚úÖ –ü—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—Ä–æ—Å–µ Rate Plan –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`   Property ID –≤ –æ—Ç–≤–µ—Ç–µ: ${directData.data?.relationships?.property?.data?.id}`);
      
      if (directData.data?.relationships?.property?.data?.id !== PROPERTY_ID) {
        console.log('   ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: Rate Plan –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–º—É property!');
      }
    } else {
      console.log(`‚ùå –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${directResponse.status}`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º Room Type
    console.log('\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º Suite Room Type...');
    const roomTypesUrl = `${BASE_URL}/room_types?property_id=${PROPERTY_ID}`;
    const rtResponse = await fetch(roomTypesUrl, {
      headers: {
        'user-api-key': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    const rtData = await rtResponse.json();
    const suiteRoomType = rtData.data?.find(rt => rt.id === suiteRoomTypeId);
    
    if (suiteRoomType) {
      console.log('‚úÖ Suite Room Type –Ω–∞–π–¥–µ–Ω');
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${suiteRoomType.attributes.title}`);
    } else {
      console.log('‚ùå Suite Room Type –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
    console.log('\n' + '='.repeat(50));
    console.log('\nüí° –†–ï–®–ï–ù–ò–ï:');
    console.log('===========');
    
    if (foundSuiteRatePlan) {
      console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞! Suite –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å.');
      console.log('   –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ –∏–ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏.');
    } else {
      console.log('‚ùå Rate Plan ID –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç property.');
      console.log('\nüîß –ù—É–∂–Ω–æ –ª–∏–±–æ:');
      console.log('   1. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π Rate Plan –¥–ª—è Suite –≤ Channex');
      console.log('   2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π Rate Plan ID –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

analyzeSuiteIssue();