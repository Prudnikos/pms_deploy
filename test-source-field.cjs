const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://otlvihqfngfcsjwqfnty.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im90bHZpaHFmbmdmY3Nqd3FmbnR5Iiwicm9sZSI6InNlcnZpY2UiLCJpYXQiOjE3MjA0MjY1MDgsImV4cCI6MjAzNjAwMjUwOH0.cLGC6bG5lpz3-DkQ0Tw8QEQ_KHXy3cLhKBMIQzlDidk';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testSourceField() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—è source –∏ channel –≤ —Ç–∞–±–ª–∏—Ü–µ bookings...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const { data: bookings, error } = await supabase
      .from('bookings')
      .select('id, guest_first_name, source, channel, check_in, created_at')
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
      return;
    }
    
    console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:');
    console.log('================================');
    
    if (bookings && bookings.length > 0) {
      bookings.forEach((booking, index) => {
        console.log(`\n${index + 1}. –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ID: ${booking.id}`);
        console.log(`   –ì–æ—Å—Ç—å: ${booking.guest_first_name || 'N/A'}`);
        console.log(`   –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞: ${booking.check_in}`);
        console.log(`   Source: ${booking.source || '‚ùå –ü–£–°–¢–û'}`);
        console.log(`   Channel: ${booking.channel || '‚ùå –ü–£–°–¢–û'}`);
        console.log(`   –°–æ–∑–¥–∞–Ω–æ: ${new Date(booking.created_at).toLocaleString('ru-RU')}`);
      });
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      const withSource = bookings.filter(b => b.source).length;
      const withChannel = bookings.filter(b => b.channel).length;
      
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
      console.log(`   –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å source: ${withSource}/${bookings.length}`);
      console.log(`   –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å channel: ${withChannel}/${bookings.length}`);
      
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    // –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –æ–¥–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞
    if (bookings && bookings.length > 0 && !bookings[0].source) {
      console.log('\nüß™ –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...');
      
      const { data: updated, error: updateError } = await supabase
        .from('bookings')
        .update({ 
          source: 'Test', 
          channel: 'test-channel' 
        })
        .eq('id', bookings[0].id)
        .select();
      
      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateError);
        console.log('\nüí° –í–µ—Ä–æ—è—Ç–Ω–æ, –ø–æ–ª—è source/channel –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ bookings');
        console.log('   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ –ø–æ–ª—è –≤ Supabase Dashboard');
      } else {
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
        console.log('   Source:', updated[0].source);
        console.log('   Channel:', updated[0].channel);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        await supabase
          .from('bookings')
          .update({ source: null, channel: null })
          .eq('id', bookings[0].id);
        
        console.log('üîÑ –ó–Ω–∞—á–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –æ–±—Ä–∞—Ç–Ω–æ');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

testSourceField();