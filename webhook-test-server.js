// ะัะพััะพะน webhook ัะตัั ัะตัะฒะตั ะดะปั ngrok
import express from 'express';
import { createClient } from '@supabase/supabase-js';

const app = express();
app.use(express.json());

const supabaseUrl = 'https://zbhvwxpvlxqxadqzshfc.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpiaHZ3eHB2bHhxeGFkcXpzaGZjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTkyNTM3NCwiZXhwIjoyMDY3NTAxMzc0fQ.0kO3vG1OXNS05NPgm7MmcbkdMuLSG49GKwkCP4979tc';
const supabase = createClient(supabaseUrl, supabaseServiceKey);

// Webhook endpoint
app.post('/webhook', async (req, res) => {
  console.log('\n๐ ========== CHANNEX WEBHOOK ะะะะฃะงะะ ==========');
  console.log('๐ ะัะตะผั:', new Date().toISOString());
  console.log('๐ง Headers:', JSON.stringify(req.headers, null, 2));
  console.log('๐ Body:', JSON.stringify(req.body, null, 2));
  
  try {
    // ะกะพััะฐะฝัะตะผ webhook ะฒ ะะ
    const { error: logError } = await supabase
      .from('channex_webhooks')
      .insert({
        event_type: 'booking',
        event_id: `ngrok-test-${Date.now()}`,
        object_type: 'booking',
        object_id: req.body.booking_id || 'test',
        payload: req.body,
        received_at: new Date().toISOString(),
        processed: true
      });

    if (logError) {
      console.error('โ ะัะธะฑะบะฐ ัะพััะฐะฝะตะฝะธั ะฒ ะะ:', logError);
    } else {
      console.log('โ Webhook ัะพััะฐะฝะตะฝ ะฒ ะะ ััะฟะตัะฝะพ!');
    }

    // ะะพะทะฒัะฐัะฐะตะผ ััะฟะตัะฝัะน ะพัะฒะตั
    const response = {
      success: true,
      message: 'Webhook received successfully via ngrok!',
      timestamp: new Date().toISOString(),
      data_received: req.body
    };

    console.log('๐ค ะัะฒะตั Channex:', response);
    console.log('================================================\n');
    
    res.status(200).json(response);

  } catch (error) {
    console.error('๐ฅ ะัะธัะธัะตัะบะฐั ะพัะธะฑะบะฐ:', error);
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});

// Health check
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    server: 'ngrok-webhook-test',
    timestamp: new Date().toISOString() 
  });
});

const PORT = 3002;
app.listen(PORT, () => {
  console.log(`๐ Webhook ัะตัั ัะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
  console.log(`๐ ะะพะบะฐะปัะฝัะน URL: http://localhost:${PORT}/webhook`);
  console.log(`๐ ะะฐะฟัััะธัะต ngrok: ngrok http ${PORT}`);
  console.log(`๐ฏ ะัะฟะพะปัะทัะนัะต ngrok URL ะฒ Channex webhook ะฝะฐัััะพะนะบะฐั`);
});