// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ webhook'–æ–≤ –≤ –ë–î
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://zbhvwxpvlxqxadqzshfc.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpiaHZ3eHB2bHhxeGFkcXpzaGZjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTkyNTM3NCwiZXhwIjoyMDY3NTAxMzc0fQ.0kO3vG1OXNS05NPgm7MmcbkdMuLSG49GKwkCP4979tc';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkWebhookLogs() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ webhook\'–æ–≤...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ webhook'–∏
    const { data: webhooks, error: webhookError } = await supabase
      .from('channex_webhooks')
      .select('*')
      .order('received_at', { ascending: false })
      .limit(5);
    
    if (webhookError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è webhook –ª–æ–≥–æ–≤:', webhookError.message);
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ —Ç–∞–±–ª–∏—Ü–∞ channex_webhooks –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ webhook\'—ã:', webhooks?.length || 0);
      webhooks?.forEach(webhook => {
        console.log(`  - ${webhook.event_type} | ${webhook.received_at} | –û–±—Ä–∞–±–æ—Ç–∞–Ω: ${webhook.processed}`);
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const { data: bookings, error: bookingsError } = await supabase
      .from('bookings')
      .select('id, channel, ota_reservation_code, guest_first_name, guest_last_name, check_in, check_out')
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (bookingsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:', bookingsError.message);
    } else {
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookings?.length || 0);
      bookings?.forEach(booking => {
        console.log(`  - ${booking.ota_reservation_code} | ${booking.guest_first_name} ${booking.guest_last_name} | ${booking.channel}`);
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

checkWebhookLogs().catch(console.error);